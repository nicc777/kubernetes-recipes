---
apiVersion: v1
kind: Namespace
metadata:
  name: example004
  labels:
    name: example004
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-example004
  namespace: example004
spec:
  storageClassName: nfs-example001  # NOTE: This re-uses the example001 NFS StorageClass
  accessModes:
  - ReadOnlyMany
  resources:
    requests:
      storage: 5Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-example004
  namespace: example004
spec:
  replicas: 2 # CHange this value to a number higher than 4 to test the mutating webhook - the end result will be a max. of 4 replicas
  selector:
    matchLabels:
      name: app-example004
  template:
    metadata:
      name: app-example004
      labels:
        name: app-example004
    spec:
      containers:
      - name: deployment-example004
        image: docker.io/nginx:bookworm
        # resources:            # You will need to uncomment this section in order to pass the validating webhook.
        #   requests:
        #     memory: "64Mi"
        #     cpu: "250m"
        #   limits:
        #     memory: "128Mi"
        #     cpu: "500m"
        ports:
        - containerPort: 80
          name: http-web-svc
        volumeMounts:
        - name: nfs
          mountPath: "/usr/share/nginx/html"
          readOnly: true
      volumes:
      - name: nfs
        persistentVolumeClaim:
          claimName: pvc-example004
---
apiVersion: v1
kind: Service
metadata:
  name: service-example004
  namespace: example004
spec:
  selector:
    name: app-example004
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: http-ingress
  namespace: example004
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /example004(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: service-example004
            port:
              number: 8000
